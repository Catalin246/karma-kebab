version: '3.8'

services:
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    command: >
      azurite --loose
      --blobHost 0.0.0.0 --blobPort 10000
      --queueHost 0.0.0.0 --queuePort 10001
      --tableHost 0.0.0.0 --tablePort 10002
      --location /workspace --debug /workspace/debug.log
    volumes:
      - azurite-data:/data
    ports:
      - "10000:10000" # Blob service endpoint
      - "10001:10001" # Queue service endpoint
      - "10002:10002" # Table service endpoint
    networks:
      - karama-kebab-network

  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    volumes:
      - ./keycloak/realm-config/:/opt/keycloak/data/import/
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - azurite
    networks:
      - karama-kebab-network

  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672" # RabbitMQ messaging port
      - "15672:15672" # RabbitMQ management console
    networks:
      - karama-kebab-network

  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    volumes:
      - ./event-service/.env:/app/.env
    depends_on:
      - azurite
      - keycloak
      - rabbitmq
    ports:
      - "3001:3001"
    networks:
      - karama-kebab-network

  availability-service:
    build:
      context: ./availability-service
      dockerfile: Dockerfile
    volumes:
      - ./availability-service/.env:/app/.env
    depends_on:
      - azurite
      - keycloak
    ports:
      - "3002:3002"
    networks:
      - karama-kebab-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3007:3007"
    networks:
      - karama-kebab-network

  shift-service:
    build:
      context: ./shift-service
      dockerfile: Dockerfile.local
    environment:
      - AZURE_STORAGE_CONNECTION_STRING="AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;DefaultEndpointsProtocol=http;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;"
    depends_on:
      - azurite
      - keycloak
    ports:
      - "3003:3003"
    networks:
      - karama-kebab-network

  duty-service:
    build:
      context: ./duty-service
      dockerfile: Dockerfile
    volumes:
      - ./duty-service/.env:/app/.env
    depends_on:
      - azurite
      - keycloak
    ports:
      - "3004:3004"
    networks:
      - karama-kebab-network

  employee-service:
    build:
      context: ./employee-service
      dockerfile: Dockerfile
    container_name: employees
    environment:
      - PostgreSQLEntityFramework="Host=employee-db;Port=5432;Database=employeedb;Username=postgres;Password=password;"
      - FUNCTIONS_WORKER_RUNTIME=dotnet-isolated
      - AzureWebJobsStorage=UseDevelopmentStorage=true
    depends_on:
      - postgres
    ports:
      - "3005:80"
    networks:
      - karama-kebab-network

  postgres:
    image: postgres:13
    container_name: employee-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: employeedb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - karama-kebab-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # azure-functions:
  #   build:
  #     context: ./employee-service
  #     dockerfile: Dockerfile
  #   container_name: azure-functions
  #   environment:
  #     DBHOST: employee-db
  #     DBNAME: employeedb
  #     DBUSER: postgres
  #     DBPASS: password
  #     SSLMODE: disable
  #   ports:
  #     - "3006:80"  # Avoid port conflict
  #   depends_on:
  #     - postgres
  #   networks:
  #     - karama-kebab-network

volumes:
  azurite-data:
  postgres-data:

networks:
  karama-kebab-network:
    driver: bridge
