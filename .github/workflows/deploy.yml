name: Deploy to OpenShift on Change

on:
  push:
    branches:
      - feature/git-actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install OpenShift CLI (oc)
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xzf oc.tar.gz
          sudo mv oc /usr/local/bin/oc
          oc version --client

      - name: Log in to OpenShift
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }} --insecure-skip-tls-verify=true

      - name: Detect Changes
        id: changes
        run: |
          # Check for changes in api-gateway and event-service directories
          echo "Checking for changed files..."
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q '^api-gateway/'; then
            echo "api_gateway=true" >> $GITHUB_ENV
          fi

      # Step 3: Set OpenShift Project (replace with your actual project name)
      - name: Set OpenShift Project
        run: |
          oc project ${{ secrets.NAMESPACE }}

      # Step 4: Trigger OpenShift Build
      - name: Start OpenShift Build
        run: |
          oc start-build api-gateway --wait  # Trigger the build and wait for completion

      # Step 5: Restart the application by deleting the old running pod 
      - name: Restart the application by deleting the old running pod
        run: |
          oc get pods --selector=app=api-gateway --field-selector=status.phase=Running -o name | xargs -I {} oc delete {} --ignore-not-found=true