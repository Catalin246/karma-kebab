worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/json;

    # Upstreams for local environment
    upstream event_service {
        server host.docker.internal:3001;
    }

    upstream availability_service {
        server host.docker.internal:3002;
    }

    upstream shift_service {
        server host.docker.internal:3003;
    }

    upstream duty_service {
        server host.docker.internal:3004;
    }

    upstream example_service {
        server host.docker.internal:3000;
    }

    server {
        listen 3007;

        # Enable CORS headers for all origins (you can change '*' to 'http://localhost:5174' for more security)
        add_header Access-Control-Allow-Origin *;  # Allow all origins
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';  # Allow methods
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization, X-Requested-With';  # Allow specific headers
        add_header Access-Control-Allow-Credentials true;  # Allow cookies, if needed

        # Handle pre-flight OPTIONS requests (for CORS checks)
        if ($request_method = 'OPTIONS') {
            return 204;  # No content for pre-flight requests
        }

        location /events {
            proxy_pass http://event_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /availability {
            proxy_pass http://availability_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /shifts {
            proxy_pass http://shift_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /duties {
            proxy_pass http://duty_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /example_service {
            proxy_pass http://example_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health check endpoint
        location /health {
            default_type application/json;
            return 200 '{"status": "NGINX is running"}';
        }
    }
}
