worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/json;

    # Define upstream for the event-service
    upstream event_service {
        server host.docker.internal:3001; # Points to the host machine service
    }

    # Define upstream for the availability-service
    upstream availability_service {
        server host.docker.internal:3002; # Points to the host machine service
    }

    # Define upstream for the shift-service
    upstream shift_service {
        server host.docker.internal:3003; # Points to the host machine service
    }

    # Define upstream for the duty-service
    upstream duty_service {
        server host.docker.internal:3004; # Points to the host machine service
    }

    # Define upstream for the example-service
    upstream example_service {
        server host.docker.internal:3000; # Points to the host machine service
    }

    server {
        listen 3007;

        # Route /events to the event-service
        location /events {
            proxy_pass http://event_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Route /availability to the event-service
        location /availability {
            proxy_pass http://availability_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Route /shift to the shift-service
        location /shifts {
            proxy_pass http://shift_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Route /duties to the duty-service
        location /duties {
            proxy_pass http://duty_service;  
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Route /example to the example-service
        location /example_service {
            proxy_pass http://example_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health check endpoint
        location /health {
            return 200 'NGINX is running';
            add_header Content-Type text/plain;
        }
    }
}
