worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/json;

    # Upstreams for production environment
    upstream event_service {
        server event-service.internal:3001;
    }

    upstream availability_service {
        server availability-service.internal:3002;
    }

    upstream shift_service {
        server shift-service.internal:3003;
    }

    upstream duty_service {
        server duty-service.internal:3004;
    }

    upstream example_service {
        server example-service.internal:3000;
    }

    server {
        listen 80;

        location /events {
            proxy_pass http://event_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /availability {
            proxy_pass http://availability_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /shifts {
            proxy_pass http://shift_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /duties {
            proxy_pass http://duty_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /example_service {
            proxy_pass http://example_service;
            proxy_set_header X-From-Gateway "true";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /health {
            return 200 'NGINX is running';
            add_header Content-Type text/plain;
        }
    }
}
